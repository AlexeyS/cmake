SET(CMAKE_QUOTE_INCLUDE_PATHS ON)

SET(CMAKE_C_FLAGS "${SYMBIAN_C_LANG_OPTION}" CACHE STRING "")
SET(CMAKE_CXX_FLAGS "${SYMBIAN_CPP_LANG_OPTION}" CACHE STRING "")

SET(CMAKE_C_LINK_EXECUTABLE "${SYMBIAN_LD} <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET>")
SET(CMAKE_CXX_LINK_EXECUTABLE "${SYMBIAN_LD} <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET>")

SET(CRT_LIB_PATH "${SYMBIAN_SDK_PATH}\\EPOC32\\RELEASE\\ARMV5\\LIB")

SET(CRT_LIBS "${SYMBIAN_RUNTIME_LIBS_LIST}")
SEPARATE_ARGUMENTS(CRT_LIBS)
FOREACH(CRT_LIB ${CRT_LIBS})
    SET(EXE_LINKER_FLAGS "${EXE_LINKER_FLAGS} \"${CRT_LIB_PATH}\\${CRT_LIB}\"")
ENDFOREACH(CRT_LIB)

IF (SYMBIAN_TOOLCHAIN STREQUAL "GCCE")
    EXECUTE_PROCESS(COMMAND "${CMAKE_GENERATOR_CXX}" -print-libgcc-file-name
                    OUTPUT_VARIABLE LIBGCC_PATH)
    GET_FILENAME_COMPONENT(STD_LIB_PATH "${LIBGCC_PATH}" PATH)
ELSE (SYMBIAN_TOOLCHAIN STREQUAL "GCCE")
    MESSAGE(FATAL_ERROR "Unsupported symbian toolchain")
ENDIF (SYMBIAN_TOOLCHAIN STREQUAL "GCCE")

SET(EXE_LINKER_FLAGS "${EXE_LINKER_FLAGS} ${SYMBIAN_STATIC_LIBS_PATH} \"${STD_LIB_PATH}\"")
SET(EXE_LINKER_FLAGS "${EXE_LINKER_FLAGS} ${SYMBIAN_STATIC_LIBS_LIST}")
SET(EXE_LINKER_FLAGS "${EXE_LINKER_FLAGS} ${SYMBIAN_LINKER_ENTRY_OPTION} _E32Startup")

SET(CMAKE_EXE_LINKER_FLAGS "${EXE_LINKER_FLAGS}" CACHE STRING "")

SET (CMAKE_SHARED_LIBRARY_C_FLAGS "")
SET (CMAKE_SHARED_LIBRARY_CXX_FLAGS "")